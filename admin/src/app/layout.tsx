"use client"; // 클라이언트 컴포넌트로 선언

// import type { Metadata } from "next";//서버 컴포넌트에서만 export 가능
import { ReactNode, useState } from "react"; // ReactNode 타입 가져오기
import "./globals.css";
// import { useRouter } from "next/router";
import { usePathname } from "next/navigation"; // next/router 대신 사용
import Link from "next/link"; // Next.js Link 컴포넌트
import "../../styles/sidebar.css"; // 스타일 파일 가져오기

// export const metadata: Metadata = {
//   title: "TeamToast 관리자 페이지",
//   description: "Generated by create next app",
// };


export default function RootLayout({ children }: { children: ReactNode }) {
  const currentPath = usePathname(); // 현재 경로 가져오기
  const [activePath, setActivePath] = useState(currentPath); // 클릭 상태 관리

  const menuItems = [
    { href: "/login", label: "로그인" },
    { href: "/dashboard", label: "대시보드" },
    { href: "/user-management", label: "사용자 관리" },
    { href: "/role", label: "권한 및 역할 관리" },
    { href: "/activity-logs", label: "활동 로그" },
    { href: "/service-settings", label: "서비스 설정" },
    { href: "/reports", label: "신고 및 문의 관리" },
    { href: "/analytics", label: "통계 및 보고서" },
    { href: "/system-monitoring", label: "시스템 모니터링" },
  ];

  return (
    <html lang="en">
      <body>
        <div className="flex">
          {/* Sidebar */}
          {/* <nav className="w-64 bg-gray-800 text-white h-screen p-4">
            <ul className="space-y-4">
              <li><a href="/login">로그인</a></li>
              <li><a href="/dashboard">대시보드</a></li>
              <li><a href="/user-management">사용자 관리</a></li>
              <li><a href="/role">권한 및 역할 관리</a></li>
              <li><a href="/activity-logs">활동 로그</a></li>
              <li><a href="/service-settings">서비스 설정</a></li>
              <li><a href="/reports">신고 및 문의 관리</a></li>
              <li><a href="/analytics">통계 및 보고서</a></li>
              <li><a href="/system-monitoring">시스템 모니터링</a></li>
            </ul>
          </nav> */}
          <nav className="w-64 bg-gray-800 text-white h-screen p-4">
            <ul className="space-y-4">
              {menuItems.map((item) => (
                <li
                  key={item.href}
                  className={`sidebar-item ${
                    activePath === item.href ? "sidebar-item-active" : ""
                  }`}
                  onClick={() => setActivePath(item.href)} // 클릭 시 상태 업데이트
                >
                  {/* <a href={item.href}>{item.label}</a> */}
                  <Link href={item.href}>
                    <span>{item.label}</span>
                  </Link>
                </li>
              ))}
            </ul>
          </nav>
          {/* Main Content */}
          <main className="flex-1 p-4">{children}</main>
        </div>
      </body>
    </html>
  );
}
